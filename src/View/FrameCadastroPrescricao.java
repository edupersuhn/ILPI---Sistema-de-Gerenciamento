/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package View;

import Control.Impl.ImplIdosoDAO;
import Control.Impl.ImplItemPrescricaoMedica;
import Control.Impl.ImplPrescricaoMedica;
import Control.Impl.ImplRemedioDAO;
import Model.Idoso;
import Model.ItemPrescricaoMedica;
import Model.PrescricaoMedica;
import Model.Remedio;
import Util.ComponentValidator;
import Util.DataConverter;
import Util.Mensagens;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

/**
 *
 * @author Eduardo
 */
public class FrameCadastroPrescricao extends javax.swing.JFrame {
    
    private ArrayList<ItemPrescricaoMedica> listaItens;
    private ArrayList<ItemPrescricaoMedica> listaItensEdicao;
    private PrescricaoMedica prescricao;
    
    private int cod = 0;
    private int codEdicao = 0;
    
    private Idoso idoso;
    
    
    /**
     * Creates new form CadastroPrescricao
     */
    public FrameCadastroPrescricao() {
        initComponents();
        listaItens = new ArrayList<>();
        listaItensEdicao = new ArrayList<>();
        try {
            List<Idoso> listaI = ImplIdosoDAO.getInstance().encontrarTodosIdosos();
            if(listaI != null) {
                for (Iterator<Idoso> it = listaI.iterator(); it.hasNext();) {
                    Idoso i = it.next();
                    comboBoxIdoso.addItem(i);
                    comboBoxIdosoEdicao.addItem(i);
                }
            }
            List<Remedio> listaR = ImplRemedioDAO.getInstance().encontrarTodos();
            if(listaR != null) {
                for (Iterator<Remedio> it = listaR.iterator(); it.hasNext();) {
                    Remedio r = it.next();
                    comboBoxRemedio.addItem(r);
                    comboBoxRemedioEdicao.addItem(r);
                }
            }
        } catch(Exception ex) {
            ex.printStackTrace();
        }
        
    }
    
    private void limparCadastro() {
        areaObs.setText("");
        listaPrescricao.removeAll();
        botaoAdicionar.setText("");
        botaoRemover.setText("");
        campoData.setText("");
        campoHora.setText("");
        campoID.setText("");
        campoQuantidade.setText("");
        comboBoxIdoso.setSelectedIndex(0);
        comboBoxRemedio.setSelectedIndex(0);
        checkBoxHoje.setSelected(true);
    }
    
    private void limparEdicao() {
        areaObsEdicao.setText("");
        listaPrescricao.removeAll();
        botaoAdicionarEdicao.setText("");
        botaoRemoverEdicao.setText("");
        campoDataEdicao.setText("");
        campoHoraEdicao.setText("");
        campoIDEdicao.setText("");
        campoQuantidadeEdicao.setText("");
        comboBoxIdosoEdicao.setSelectedIndex(0);
        comboBoxRemedioEdicao.setSelectedIndex(0);
        habilitado(false);
    }
    
    private void habilitado(boolean flag) {
        areaObsEdicao.setEnabled(flag);
        listaPrescricaoEdicao.setEnabled(flag);
        botaoAdicionarEdicao.setEnabled(flag);
        botaoRemoverEdicao.setEnabled(flag);
        campoDataEdicao.setEnabled(flag);
        campoHoraEdicao.setEnabled(flag);
        campoIDEdicao.setEnabled(flag);
        campoQuantidadeEdicao.setEnabled(flag);
        comboBoxRemedioEdicao.setEnabled(flag);
    }
    
    private void atualizaPrescricao() {
        listaPrescricao.setListData(listaItens.toArray());
    }
    
    private void atualizaPrescricaoEdicao() {
        listaPrescricaoEdicao.setListData(listaItensEdicao.toArray());
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        campoQuantidade = new javax.swing.JFormattedTextField();
        comboBoxRemedio = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        areaObs = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        campoHora = new javax.swing.JFormattedTextField();
        labelUnidadeMedida = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        listaPrescricao = new javax.swing.JList();
        botaoCadastrar = new javax.swing.JButton();
        botaoRemover = new javax.swing.JButton();
        botaoAdicionar = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        comboBoxIdoso = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        campoID = new javax.swing.JTextField();
        campoData = new javax.swing.JFormattedTextField();
        checkBoxHoje = new javax.swing.JCheckBox();
        jPanel4 = new javax.swing.JPanel();
        comboBoxIdosoEdicao = new javax.swing.JComboBox();
        comboBoxPrescricao = new javax.swing.JComboBox();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        listaPrescricaoEdicao = new javax.swing.JList();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        campoQuantidadeEdicao = new javax.swing.JFormattedTextField();
        comboBoxRemedioEdicao = new javax.swing.JComboBox();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        areaObsEdicao = new javax.swing.JTextArea();
        jLabel10 = new javax.swing.JLabel();
        campoHoraEdicao = new javax.swing.JFormattedTextField();
        labelUnidadeMedidaEdicao = new javax.swing.JLabel();
        botaoAdicionarEdicao = new javax.swing.JButton();
        botaoRemoverEdicao = new javax.swing.JButton();
        botaoSalvar = new javax.swing.JButton();
        campoIDEdicao = new javax.swing.JTextField();
        campoDataEdicao = new javax.swing.JFormattedTextField();
        botaoConsultar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Cadastra Prescrição Médica");
        setResizable(false);

        jTabbedPane1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jTabbedPane1StateChanged(evt);
            }
        });

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Remedio"));

        campoQuantidade.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));

        comboBoxRemedio.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Selecione remédio" }));
        comboBoxRemedio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxRemedioActionPerformed(evt);
            }
        });

        jLabel1.setText("Quantidade:");

        jLabel2.setText("Observações");

        areaObs.setColumns(20);
        areaObs.setRows(5);
        jScrollPane2.setViewportView(areaObs);

        jLabel3.setText("Horario de aplicação:");

        try {
            campoHora.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##:##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        labelUnidadeMedida.setText("U/M");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(campoHora, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(campoQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(labelUnidadeMedida))
                            .addComponent(comboBoxRemedio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(comboBoxRemedio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(campoHora, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(campoQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelUnidadeMedida))
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Prescrição"));

        jScrollPane3.setViewportView(listaPrescricao);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 387, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 421, Short.MAX_VALUE)
        );

        botaoCadastrar.setText("Cadastrar");
        botaoCadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoCadastrarActionPerformed(evt);
            }
        });

        botaoRemover.setText("Remover");
        botaoRemover.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoRemoverActionPerformed(evt);
            }
        });

        botaoAdicionar.setText("Adicionar");
        botaoAdicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoAdicionarActionPerformed(evt);
            }
        });

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder("Dados da prescrição"));

        comboBoxIdoso.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Selecione idoso" }));
        comboBoxIdoso.setToolTipText("");

        jLabel4.setText("Data:");

        jLabel5.setText("Identificação:");

        try {
            campoData.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        checkBoxHoje.setText("hoje");
        checkBoxHoje.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkBoxHojeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(campoData)
                            .addComponent(campoID, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(comboBoxIdoso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(checkBoxHoje)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(comboBoxIdoso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(campoData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(checkBoxHoje))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(campoID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(botaoRemover, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(botaoAdicionar))
                        .addGap(18, 18, 18)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(345, 345, 345)
                        .addComponent(botaoCadastrar)))
                .addContainerGap(28, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                            .addComponent(botaoAdicionar)
                            .addGap(18, 18, 18)
                            .addComponent(botaoRemover)
                            .addGap(128, 128, 128)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 149, Short.MAX_VALUE)
                .addComponent(botaoCadastrar)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Cadastro", jPanel3);

        comboBoxIdosoEdicao.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Selecione idoso" }));
        comboBoxIdosoEdicao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxIdosoEdicaoActionPerformed(evt);
            }
        });

        comboBoxPrescricao.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Selecione prescrição" }));
        comboBoxPrescricao.setEnabled(false);

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder("Prescrição"));

        jScrollPane5.setViewportView(listaPrescricaoEdicao);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 387, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 421, Short.MAX_VALUE)
        );

        jLabel6.setText("Data:");

        jLabel7.setText("Identificação:");

        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder("Remedio"));

        campoQuantidadeEdicao.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        campoQuantidadeEdicao.setEnabled(false);

        comboBoxRemedioEdicao.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Selecione remédio" }));
        comboBoxRemedioEdicao.setEnabled(false);
        comboBoxRemedioEdicao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxRemedioEdicaoActionPerformed(evt);
            }
        });

        jLabel8.setText("Quantidade:");

        jLabel9.setText("Observações");

        areaObsEdicao.setColumns(20);
        areaObsEdicao.setRows(5);
        areaObsEdicao.setEnabled(false);
        jScrollPane4.setViewportView(areaObsEdicao);

        jLabel10.setText("Horario de aplicação:");

        try {
            campoHoraEdicao.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##:##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        campoHoraEdicao.setEnabled(false);

        labelUnidadeMedidaEdicao.setText("U/M");

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9)
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(campoHoraEdicao, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 69, Short.MAX_VALUE))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(campoQuantidadeEdicao, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(labelUnidadeMedidaEdicao))
                            .addComponent(comboBoxRemedioEdicao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(110, Short.MAX_VALUE))))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addComponent(comboBoxRemedioEdicao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(campoHoraEdicao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(campoQuantidadeEdicao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelUnidadeMedidaEdicao))
                .addGap(18, 18, 18)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        botaoAdicionarEdicao.setText("Adicionar");
        botaoAdicionarEdicao.setEnabled(false);
        botaoAdicionarEdicao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoAdicionarEdicaoActionPerformed(evt);
            }
        });

        botaoRemoverEdicao.setText("Remover");
        botaoRemoverEdicao.setEnabled(false);
        botaoRemoverEdicao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoRemoverEdicaoActionPerformed(evt);
            }
        });

        botaoSalvar.setText("Salvar alterações");
        botaoSalvar.setEnabled(false);
        botaoSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoSalvarActionPerformed(evt);
            }
        });

        campoIDEdicao.setEnabled(false);

        try {
            campoDataEdicao.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        campoDataEdicao.setEnabled(false);

        botaoConsultar.setText("Consultar");
        botaoConsultar.setEnabled(false);
        botaoConsultar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoConsultarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(botaoRemoverEdicao, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(botaoAdicionarEdicao))
                        .addGap(18, 18, 18)
                        .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(comboBoxIdosoEdicao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel6))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(campoIDEdicao)
                                    .addComponent(campoDataEdicao, javax.swing.GroupLayout.DEFAULT_SIZE, 96, Short.MAX_VALUE)))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(comboBoxPrescricao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(botaoConsultar)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(botaoSalvar)
                .addGap(318, 318, 318))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(comboBoxIdosoEdicao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboBoxPrescricao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botaoConsultar))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(campoDataEdicao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(campoIDEdicao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(113, 113, 113)
                        .addComponent(botaoAdicionarEdicao)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(botaoRemoverEdicao)))
                .addGap(18, 18, 18)
                .addComponent(botaoSalvar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Consulta", jPanel4);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botaoAdicionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoAdicionarActionPerformed
        Remedio r;
        if(comboBoxRemedio.getSelectedIndex() != 0) {
            r = (Remedio) comboBoxRemedio.getSelectedItem();
        }
        else {
            Mensagens.campoInvalido(this, "Campo Remedio");
            return;
        }
        ItemPrescricaoMedica ipm = new ItemPrescricaoMedica();
        ipm.setNumeroRemedio(r.getCodigo());
        if(!areaObs.getText().equals("")) {
            ipm.setObservacaoRemedio(areaObs.getText());
        }
        else {
            Mensagens.campoInvalido(this, "Campo Observações");
            return;
        }
        if(ComponentValidator.integerNotNegativeAndNotZero(campoQuantidade)) {
            ipm.setQtdRemedio(Integer.parseInt(campoQuantidade.getText()));
        }
        else {
            Mensagens.campoInvalido(this, "Campo Quantidade");
            return;
        }
        ipm.setCod(cod++);
        ipm.setRemedio(r);
        listaItens.add(ipm);
        atualizaPrescricao();
    }//GEN-LAST:event_botaoAdicionarActionPerformed

    private void botaoRemoverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoRemoverActionPerformed
        if(!listaPrescricao.isSelectionEmpty()) {
            listaItens.remove((ItemPrescricaoMedica) listaPrescricao.getSelectedValue());
            atualizaPrescricao();
        }
        else {
            Mensagens.campoInvalido(this, "Lista de Remédios");
        }
    }//GEN-LAST:event_botaoRemoverActionPerformed

    private void botaoCadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoCadastrarActionPerformed
        PrescricaoMedica prescricao = new PrescricaoMedica();
        if(comboBoxIdoso.getSelectedIndex() != 0) {
            prescricao.setIdoso((Idoso) comboBoxIdoso.getSelectedItem());
        }
        else {
            Mensagens.campoInvalido(this, "Campo Idoso");
            return;
        }
        if(ComponentValidator.date(campoData)) {
            prescricao.setDataPrescricao(DataConverter.stringTypeToSQLDate(campoData.getText()));
        }
        else {
            Mensagens.campoInvalido(this, "Campo Data");
            return;
        }
        if(!campoID.getText().equals("")) {
            //prescricao.setID(campoID.getText());
        }
        else {
            Mensagens.campoInvalido(this, "Campo Identificação");
            return;
        }
        if(listaItens.isEmpty()) {
            Mensagens.campoInvalido(this, "Prescrição Médica");
            return;
        }
        try {
            ImplPrescricaoMedica.getInstance().inserir(prescricao);
            for (Iterator<ItemPrescricaoMedica> it = listaItens.iterator(); it.hasNext();) {
                ItemPrescricaoMedica itemPrescricaoMedica = it.next();
                ImplItemPrescricaoMedica.getInstance().inserir(itemPrescricaoMedica);
            }
            limparCadastro();
        } catch(Exception ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_botaoCadastrarActionPerformed

    private void botaoAdicionarEdicaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoAdicionarEdicaoActionPerformed
        Remedio r;
        if(comboBoxRemedioEdicao.getSelectedIndex() != 0) {
            r = (Remedio) comboBoxRemedioEdicao.getSelectedItem();
        }
        else {
            Mensagens.campoInvalido(this, "Campo Remedio");
            return;
        }
        ItemPrescricaoMedica ipm = new ItemPrescricaoMedica();
        ipm.setNumeroRemedio(r.getCodigo());
        if(!areaObsEdicao.getText().equals("")) {
            ipm.setObservacaoRemedio(areaObsEdicao.getText());
        }
        else {
            Mensagens.campoInvalido(this, "Campo Observações");
            return;
        }
        if(ComponentValidator.integerNotNegativeAndNotZero(campoQuantidadeEdicao)) {
            ipm.setQtdRemedio(Integer.parseInt(campoQuantidadeEdicao.getText()));
        }
        else {
            Mensagens.campoInvalido(this, "Campo Quantidade");
            return;
        }
        ipm.setCod(codEdicao++);
        ipm.setRemedio(r);
        listaItensEdicao.add(ipm);
        atualizaPrescricaoEdicao();
    }//GEN-LAST:event_botaoAdicionarEdicaoActionPerformed

    private void botaoRemoverEdicaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoRemoverEdicaoActionPerformed
        if(!listaPrescricaoEdicao.isSelectionEmpty()) {
            listaItensEdicao.remove((ItemPrescricaoMedica) listaPrescricaoEdicao.getSelectedValue());
            atualizaPrescricao();
        }
        else {
            Mensagens.campoInvalido(this, "Lista de Remédios");
        }
    }//GEN-LAST:event_botaoRemoverEdicaoActionPerformed

    private void checkBoxHojeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkBoxHojeActionPerformed
        if(checkBoxHoje.isSelected()) {
            SimpleDateFormat format = new SimpleDateFormat("dd/MM/YYYY");
            Date hoje = new Date();
            System.out.println(format.format(hoje));
            campoData.setText(format.format(hoje));
        }
        else {
            campoData.setText("");
        }
    }//GEN-LAST:event_checkBoxHojeActionPerformed

    private void comboBoxIdosoEdicaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxIdosoEdicaoActionPerformed
        if(comboBoxIdosoEdicao.getSelectedIndex() != 0) {
            comboBoxPrescricao.setEnabled(true);
            botaoConsultar.setEnabled(true);
        }
        else {
            comboBoxPrescricao.setEnabled(false);
            botaoConsultar.setEnabled(false);
        }
    }//GEN-LAST:event_comboBoxIdosoEdicaoActionPerformed

    private void botaoConsultarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoConsultarActionPerformed
        prescricao = (PrescricaoMedica) comboBoxPrescricao.getSelectedItem();
        if(comboBoxPrescricao.getSelectedIndex() != 0) {
            areaObsEdicao.setText(prescricao.getObservacao());
            
            listaItensEdicao = new ArrayList<>();
            // listaItensEdicao = ImplItemPrescricaoMedica.getInstance().encontrarTodosPrescricao(PrescricaoMedica prescricao);
            
            for (Iterator<ItemPrescricaoMedica> it = listaItensEdicao.iterator(); it.hasNext();) {
                ItemPrescricaoMedica itemPrescricaoMedica = it.next();
                itemPrescricaoMedica.setCod(codEdicao++);
            }
            
            atualizaPrescricaoEdicao();
            SimpleDateFormat format = new SimpleDateFormat("dd/MM/YYYY");
            campoDataEdicao.setText(format.format(prescricao.getDataPrescricao()));
            // campoIDEdicao.setText(prescricao.getID());
            comboBoxRemedioEdicao.setSelectedIndex(0);
            habilitado(true);
        }
        else {
            Mensagens.campoInvalido(this, "Campo Prescrição");
        }
    }//GEN-LAST:event_botaoConsultarActionPerformed

    private void botaoSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoSalvarActionPerformed
        PrescricaoMedica prescricao = new PrescricaoMedica();
        if(comboBoxIdosoEdicao.getSelectedIndex() != 0) {
            prescricao.setIdoso((Idoso) comboBoxIdosoEdicao.getSelectedItem());
        }
        else {
            Mensagens.campoInvalido(this, "Campo Idoso");
            return;
        }
        if(ComponentValidator.date(campoDataEdicao)) {
            prescricao.setDataPrescricao(DataConverter.stringTypeToSQLDate(campoDataEdicao.getText()));
        }
        else {
            Mensagens.campoInvalido(this, "Campo Data");
            return;
        }
        if(!campoIDEdicao.getText().equals("")) {
            //prescricao.setID(campoIDEdicao.getText());
        }
        else {
            Mensagens.campoInvalido(this, "Campo Identificação");
            return;
        }
        if(listaItensEdicao.isEmpty()) {
            Mensagens.campoInvalido(this, "Prescrição Médica");
            return;
        }
        try {
            ImplPrescricaoMedica.getInstance().atualizar(prescricao);
            for (Iterator<ItemPrescricaoMedica> it = listaItensEdicao.iterator(); it.hasNext();) {
                ItemPrescricaoMedica itemPrescricaoMedica = it.next();
                ImplItemPrescricaoMedica.getInstance().atualizar(itemPrescricaoMedica);
            }
            limparEdicao();
        } catch(Exception ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_botaoSalvarActionPerformed

    private void comboBoxRemedioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxRemedioActionPerformed
        if(comboBoxRemedio.getSelectedIndex() != 0) {
            labelUnidadeMedida.setText(((Remedio) comboBoxRemedio.getSelectedItem()).getUnidadeMedida());
        }
        else {
            labelUnidadeMedida.setText("U/M");
        }
    }//GEN-LAST:event_comboBoxRemedioActionPerformed

    private void jTabbedPane1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jTabbedPane1StateChanged
        if(jTabbedPane1.getSelectedIndex() == 1) {
            try {
                List<PrescricaoMedica> lista = ImplPrescricaoMedica.getInstance().encontrarTodos();
                for (Iterator<PrescricaoMedica> it = lista.iterator(); it.hasNext();) {
                    PrescricaoMedica prescricaoMedica = it.next();
                    comboBoxPrescricao.addItem(prescricaoMedica);
                }
            } catch(Exception ex) {
                ex.printStackTrace();
            }
        }
    }//GEN-LAST:event_jTabbedPane1StateChanged

    private void comboBoxRemedioEdicaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxRemedioEdicaoActionPerformed
        if(comboBoxRemedioEdicao.getSelectedIndex() != 0) {
            labelUnidadeMedidaEdicao.setText(((Remedio) comboBoxRemedioEdicao.getSelectedItem()).getUnidadeMedida());
        }
        else {
            labelUnidadeMedidaEdicao.setText("U/M");
        }
    }//GEN-LAST:event_comboBoxRemedioEdicaoActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea areaObs;
    private javax.swing.JTextArea areaObsEdicao;
    private javax.swing.JButton botaoAdicionar;
    private javax.swing.JButton botaoAdicionarEdicao;
    private javax.swing.JButton botaoCadastrar;
    private javax.swing.JButton botaoConsultar;
    private javax.swing.JButton botaoRemover;
    private javax.swing.JButton botaoRemoverEdicao;
    private javax.swing.JButton botaoSalvar;
    private javax.swing.JFormattedTextField campoData;
    private javax.swing.JFormattedTextField campoDataEdicao;
    private javax.swing.JFormattedTextField campoHora;
    private javax.swing.JFormattedTextField campoHoraEdicao;
    private javax.swing.JTextField campoID;
    private javax.swing.JTextField campoIDEdicao;
    private javax.swing.JFormattedTextField campoQuantidade;
    private javax.swing.JFormattedTextField campoQuantidadeEdicao;
    private javax.swing.JCheckBox checkBoxHoje;
    private javax.swing.JComboBox comboBoxIdoso;
    private javax.swing.JComboBox comboBoxIdosoEdicao;
    private javax.swing.JComboBox comboBoxPrescricao;
    private javax.swing.JComboBox comboBoxRemedio;
    private javax.swing.JComboBox comboBoxRemedioEdicao;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel labelUnidadeMedida;
    private javax.swing.JLabel labelUnidadeMedidaEdicao;
    private javax.swing.JList listaPrescricao;
    private javax.swing.JList listaPrescricaoEdicao;
    // End of variables declaration//GEN-END:variables
}
